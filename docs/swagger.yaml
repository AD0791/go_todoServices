basePath: /api/v1
definitions:
  schema.MessageResponse:
    properties:
      id:
        type: integer
      message:
        type: string
    type: object
  schema.TodoRequest:
    properties:
      completed:
        type: boolean
      title:
        minLength: 3
        type: string
    required:
    - title
    type: object
  schema.TodoResponse:
    properties:
      completed:
        type: boolean
      id:
        type: integer
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: alexandrodisla@hotmail.com
    name: AD0791
  description: API documentation for Todo service with persistence
  termsOfService: Developpement
  title: Todo API Documentation
  version: "1.1"
paths:
  /service/todos:
    get:
      consumes:
      - application/json
      description: Retrieve all todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schema.TodoResponse'
            type: array
      summary: Get all todos
      tags:
      - todos_services_noPersistence
    post:
      consumes:
      - application/json
      description: Add a new todo to the list
      parameters:
      - description: Todo to create
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/schema.TodoRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schema.TodoResponse'
        "400":
          description: Validation error
          schema:
            type: string
      summary: Create a new todo
      tags:
      - todos_services_noPersistence
  /service/todos/{id}:
    delete:
      description: Remove a todo from the list
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/schema.MessageResponse'
        "404":
          description: Todo not found
          schema:
            type: string
      summary: Delete a todo
      tags:
      - todos_services_noPersistence
    get:
      consumes:
      - application/json
      description: Retrieve a single todo by its ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.TodoResponse'
        "404":
          description: Todo not found
          schema:
            type: string
      summary: Get todo by ID
      tags:
      - todos_services_noPersistence
    put:
      consumes:
      - application/json
      description: Modify an existing todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated todo data
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/schema.TodoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.TodoResponse'
        "400":
          description: Validation error
          schema:
            type: string
        "404":
          description: Todo not found
          schema:
            type: string
      summary: Update a todo
      tags:
      - todos_services_noPersistence
swagger: "2.0"
